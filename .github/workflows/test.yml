name: test

on:
  push:
    branches:
      - master
  pull_request:

env:
  FOUNDRY_PROFILE: ci
  SEPOLIA_RPC_URL: ${{ secrets.SEPOLIA_RPC_URL }}
  SEPOLIA_ENDPOINT_V2: ${{ secrets.SEPOLIA_ENDPOINT_V2 }}
  SEPOLIA_SEND_LIB: ${{ secrets.SEPOLIA_SEND_LIB }}
  SEPOLIA_EXECUTOR: ${{ secrets.SEPOLIA_EXECUTOR }}
  SEPOLIA_EID: ${{ secrets.SEPOLIA_EID }}
  HOLESKY_RPC_URL: ${{ secrets.HOLESKY_RPC_URL }}
  HOLESKY_ENDPOINT_V2: ${{ secrets.HOLESKY_ENDPOINT_V2 }}
  HOLESKY_RECEIVE_LIB: ${{ secrets.HOLESKY_RECEIVE_LIB }}
  HOLESKY_EXECUTOR: ${{ secrets.HOLESKY_EXECUTOR }}
  HOLESKY_EID: ${{ secrets.HOLESKY_EID }}
  LAYERZERO_HOLESKY_DVN: ${{ secrets.LAYERZERO_HOLESKY_DVN }}
  LAYERZERO_SEPOLIA_DVN: ${{ secrets.LAYERZERO_SEPOLIA_DVN }}

jobs:
  test:
    strategy:
      fail-fast: true

    name: Foundry tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Show Forge version
        run: |
          forge --version

      - name: "Generate a fuzz seed that changes weekly to avoid burning through RPC allowance"
        run: >
          echo "FOUNDRY_FUZZ_SEED=$(
            echo $(($EPOCHSECONDS - $EPOCHSECONDS % 604800))
          )" >> $GITHUB_ENV

      - name: Set yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Install node.js dependencies
        run: yarn --frozen-lockfile

      - name: Run Forge build
        run: |
          make build
        id: build

      - name: Run Forge tests
        run: |
          make test
        id: test

      - name: "Add test summary"
        run: |
          echo "## Tests result" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Passed" >> $GITHUB_STEP_SUMMARY
